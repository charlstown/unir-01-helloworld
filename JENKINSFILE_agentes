pipeline {
    agent any

    stages {
        stage('Setup') {
            agent any
            steps {
                sh '''
                echo "[AGENT]"
                whoami
                hostname
                git config --global --add safe.directory /var/jenkins_home/workspace/case_study_01/cp1-1-reto2
                '''
                git 'https://github.com/charlstown/unir-cp01-a.git'

                // Stash files after cloning
                stash includes: '**', name: 'project-files'
            }
        }

        stage('Build') {
            agent any
            steps {
                // Unstash project files
                unstash 'project-files'
                sh '''
                echo "[AGENT]"
                whoami
                hostname
                echo '[Build] No build needed'
                ls -la
                echo $WORKSPACE
                '''
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'agent-vi' }
                    environment {
                        PYTHONPATH = "/var/jenkins_home/workspace/O24/cp1-1-dev"
                    }
                    steps {
                        // Unstash project files
                        unstash 'project-files'
                        sh '''
                        echo "[AGENT]"
                        whoami
                        hostname
                        '''
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh 'python3 -m pytest --junitxml=result-unit.xml test/unit'
                        }
                    }
                }

                stage('Rest') {
                    agent { label 'agent-jinx' }
                    environment {
                        PYTHONPATH = "/var/jenkins_home/workspace/O24/cp1-1-dev"
                    }
                    steps {
                        // Unstash project files
                        unstash 'project-files'
                        sh '''
                        echo "[AGENT]"
                        whoami
                        hostname
                        '''
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                            export FLASK_APP=app/api.py
                            flask run &
                            python3 -m pytest --junitxml=result-rest.xml test/rest
                            '''
                        }
                    }
                }
            }
        }

        stage('Results') {
            agent any
            steps {
                sh '''
                echo "[AGENT]"
                whoami
                hostname
                '''
                junit 'result*.xml'
            }
        }
    }
}
